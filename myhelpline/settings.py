# vim: set fileencoding=utf-8
"""
Django settings for myhelpline project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import logging
import warnings
import os
import socket
import subprocess  # noqa, used by included files
import sys
from imp import reload

from datetime import timedelta
import pytz

from future.moves.urllib.parse import urljoin

from past.builtins import basestring

from django.core.exceptions import SuspiciousOperation
from django.utils.log import AdminEmailHandler
from django.conf import global_settings

from decimal import Decimal

from rest_framework.settings import api_settings
logger = logging.getLogger(__name__)
logger.debug('Logging configuration is loaded')
# setting default encoding to utf-8
if sys.version[0] == '2':
    reload(sys)
    sys.setdefaultencoding("utf-8")

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

warnings.filterwarnings("ignore", "No hostname was supplied")

CURRENT_FILE = os.path.abspath(__file__)
PROJECT_ROOT = BASE_DIR

PRINT_EXCEPTION = False


TEMPLATED_EMAIL_TEMPLATE_DIR = 'templated_email/'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)
MANAGERS = ADMINS

DEFAULT_FROM_EMAIL = 'noreply@helpline.co.ke'
SHARE_PROJECT_SUBJECT = '{} Project has been shared with you.'
SHARE_ORG_SUBJECT = '{}, You have been added to {} organisation.'
DEFAULT_SESSION_EXPIRY_TIME = 21600  # 6 hours
DEFAULT_TEMP_TOKEN_EXPIRY_TIME = 21600  # 6 hours

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#)=h)_wc*k%f=wk+!$x0t%1wx7*_50$a1%*75s$og(8$27$ju1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = (
    'django.contrib.auth',
    'organizations',
    # admin tool apps
    'import_export',
    'widget_tweaks',
    'admin_tools',
    'admin_tools.theming',
    'admin_tools.menu',
    'admin_tools.dashboard',
    'hijack',
    'helpline.apps.HelplineConfig',
    'tellme',
    'registration',
    'admin_tools_stats',
    'django_nvd3',
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.gis',
    'django.contrib.contenttypes',
    'django.contrib.humanize',
    'django_celery_results',
    'markdown_deux',
    'bootstrapform',
    'django.contrib.sites',
    'zerxis',
    'calendly',

    # allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.twitter',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.microsoft',
    'allauth.socialaccount.providers.google',

    'axes',
    'invitations',
    'user_sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'oidc_provider',
    'django_countries',
    'genericadmin',
    'mailer',
    'snowpenguin.django.recaptcha3',
    'django_nose',
    'oauth2_provider',
    'rest_framework.authtoken',
    'taggit',
    'reversion',
    'actstream',
    'guardian',
    'djangobower',
    'notifications',
    'crispy_forms',
    'django_tables2',
    'debug_toolbar',
    'rest_framework',
    'knox',
    'selectable',
    'corsheaders',
    'avatar',
    'easy_pjax',
    'mathfilters',
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'two_factor',
    'tinymce',
    'sequences',
    'imab',
    'collection_crm',
    'zerxis_account',
    'hijack.contrib.admin',
    )


ACCOUNT_ADAPTER = "invitations.models.InvitationsAdapter"

ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True

ACCOUNT_AUTHENTICATION_METHOD = "username_email"

ACCOUNT_CONFIRM_EMAIL_ON_GET = False

ACCOUNT_EMAIL_REQUIRED = True

ACCOUNT_EMAIL_VERIFICATION = "mandatory"

ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"

ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5

SOCIALACCOUNT_EMAIL_REQUIRED = True

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
        'groups': 'Access to your groups'}
}
# needed by guardian
ANONYMOUS_DEFAULT_USERNAME = 'AnonymousUser'

REST_FRAMEWORK = {
    # Use hyperlinked styles by default.
    # Only used if the `serializer_class` attribute is not set on a view.
    'DEFAULT_MODEL_SERIALIZER_CLASS':
    'rest_framework.serializers.HyperlinkedModelSerializer',

    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'knox.auth.TokenAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework_jsonp.renderers.JSONPRenderer',
        'rest_framework_csv.renderers.CSVRenderer',
    ),
}

SWAGGER_SETTINGS = {
    "exclude_namespaces": [],    # List URL namespaces to ignore
    "api_version": '1.0',  # Specify your API's version (optional)
    "enabled_methods": [         # Methods to enable in UI
        'get',
        'post',
        'put',
        'patch',
        'delete'
    ],
}

CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_CREDENTIALS = True

CORS_URLS_ALLOW_ALL_REGEX = (
    r'^/api/v1/osm/.*$',
)

USE_THOUSAND_SEPARATOR = True

COMPRESS = True


# Settings for Django Registration
ACCOUNT_ACTIVATION_DAYS = 1


def skip_suspicious_operations(record):
    """Prevent django from sending 500 error
    email notifications for SuspiciousOperation
    events, since they are not true server errors,
    especially when related to the ALLOWED_HOSTS
    configuration

    background and more information:
    http://www.tiwoc.de/blog/2013/03/django-prevent-email-notification-on-susp\
    iciousoperation/
    """
    if record.exc_info:
        exc_value = record.exc_info[1]
        if isinstance(exc_value, SuspiciousOperation):
            return False
    return True


# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error.
# See http://docs.djangoproject.com/en/dev/topics/logging for

# more details on how to customize your logging configuration.

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s' +
                      ' %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
        'profiler': {
            'format': '%(levelname)s %(asctime)s %(message)s'
        },
        'sql': {
            'format': '%(levelname)s %(process)d %(thread)d' +
                      ' %(time)s seconds %(message)s %(sql)s'
        },
        'sql_totals': {
            'format': '%(levelname)s %(process)d %(thread)d %(time)s seconds' +
                      ' %(message)s %(num_queries)s sql queries'
        }
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        },
        # Define filter for suspicious urls
        'skip_suspicious_operations': {
            '()': 'django.utils.log.CallbackFilter',
            'callback': skip_suspicious_operations,
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false', 'skip_suspicious_operations'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
            'stream': sys.stdout
        },
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, "warning.log"),
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'console_logger': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, "warning.log"),
            'formatter': 'verbose'
	 },
        'two_factor': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        '': {
            'handlers': ['file'], #notice how file variable is called in handler which has been defined above
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}

# PROFILE_API_ACTION_FUNCTION is used to toggle profiling a viewset's action
PROFILE_API_ACTION_FUNCTION = False
PROFILE_LOG_BASE = '/tmp/'

MIDDLEWARE = [
    'helpline.middleware.SetRemoteAddrMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'user_sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    # Include for twilio gateway
    'two_factor.middleware.threadlocals.ThreadLocals',

    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'axes.middleware.AxesMiddleware',
    'hijack.middleware.HijackUserMiddleware',
]

ROOT_URLCONF = 'myhelpline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'OPTIONS': {
            "builtins": [
                "easy_pjax.templatetags.pjax_tags"
            ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.tz',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
            ],
            'loaders': [
                'admin_tools.template_loaders.Loader',
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ]
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesBackend',
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    'guardian.backends.ObjectPermissionBackend'
]


def configure_logging(logger, **kwargs):
    admin_email_handler = AdminEmailHandler()
    admin_email_handler.setLevel(logging.ERROR)
    logger.addHandler(admin_email_handler)


GOOGLE_STEP2_URI = 'http://helpline.co.ke/gwelcome'
GOOGLE_OAUTH2_CLIENT_ID = '1001653806275-07u37sb01o6jmkihqmfb3gbnkon9anan.apps.googleusercontent.com'
GOOGLE_OAUTH2_CLIENT_SECRET = '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'



CALENDLY_CLIENT_ID = 'IfHHFzpzEsD7Sm5vOjAOMocYAG4S1JAOv44ApwQ_yCY'
CALENDLY_CLIENT_SECRET = 'JzaMinrFEXzgPGP25VFBNo9UCJnt7PjXkIHZRWsOOEY'
CALENDLY_REDIRECT_URI = 'https://consult.elloe.ai/helpline/callback' 


THUMB_CONF = {
    'large': {'size': 1280, 'suffix': '-large'},
    'medium': {'size': 640, 'suffix': '-medium'},
    'small': {'size': 240, 'suffix': '-small'},
}
# order of thumbnails from largest to smallest
THUMB_ORDER = ['large', 'medium', 'small']
IMG_FILE_TYPE = 'jpg'

# celery
CELERY_TASK_ALWAYS_EAGER = False
# CELERY_IMPORTS = ('onadata.libs.utils.csv_import',)

CELERY_TIMEZONE = "Africa/Nairobi"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'default'

CSV_FILESIZE_IMPORT_ASYNC_THRESHOLD = 100000  # Bytes
GOOGLE_SHEET_UPLOAD_BATCH = 1000

# duration to keep zip exports before deletion (in seconds)
ZIP_EXPORT_COUNTDOWN = 3600  # 1 hour

# number of records on export or CSV import before a progress update
EXPORT_TASK_PROGRESS_UPDATE_BATCH = 1000
EXPORT_TASK_LIFESPAN = 6  # six hours

# default content length for submission requests
DEFAULT_CONTENT_LENGTH = 10000000

TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'
NOSE_ARGS = ['--with-fixture-bundling', '--nologcapture', '--nocapture']

# fake endpoints for testing
TEST_HTTP_HOST = 'testserver.com'
TEST_USERNAME = 'bob'

# specify the root folder which may contain a templates folder and a static
# folder used to override templates for site specific details
TEMPLATE_OVERRIDE_ROOT_DIR = None

# Use 1 or 0 for multiple selects instead of True or False for csv, xls exports
BINARY_SELECT_MULTIPLES = False

# Use 'n/a' for empty values by default on csv exports
NA_REP = 'n/a'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

if isinstance(TEMPLATE_OVERRIDE_ROOT_DIR, basestring):
    # site templates overrides
    TEMPLATES[0]['DIRS'] = [
        os.path.join(PROJECT_ROOT, TEMPLATE_OVERRIDE_ROOT_DIR, 'templates'),
    ] + TEMPLATES[0]['DIRS']
    # site static files path
    STATICFILES_DIRS += (
        os.path.join(PROJECT_ROOT, TEMPLATE_OVERRIDE_ROOT_DIR, 'static'),
    )

# Set wsgi url scheme to HTTPS
# os.environ['wsgi.url_scheme'] = 'https'

SUPPORTED_MEDIA_UPLOAD_TYPES = [
    'audio/mp3',
    'audio/mpeg',
    'audio/wav',
    'audio/x-m4a',
    'image/jpeg',
    'image/png',
    'image/svg+xml',
    'text/csv',
    'text/json',
    'video/3gpp',
    'video/mp4',
    'application/json',
    'application/pdf',
    'application/msword',
    'application/vnd.ms-excel',
    'application/vnd.ms-powerpoint',
    'application/vnd.oasis.opendocument.text',
    'application/vnd.oasis.opendocument.spreadsheet',
    'application/vnd.oasis.opendocument.presentation',
    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
    'application/vnd.openxmlformats-officedocument.presentationml.\
     presentation',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'application/zip',
]

CSV_ROW_IMPORT_ASYNC_THRESHOLD = 100
SEND_EMAIL_ACTIVATION_API = False
METADATA_SEPARATOR = "|"

PARSED_INSTANCE_DEFAULT_LIMIT = 1000000
PARSED_INSTANCE_DEFAULT_BATCHSIZE = 1000

path = os.path.join(PROJECT_ROOT, "..", "extras", "reserved_accounts.txt")

EXPORT_WITH_IMAGE_DEFAULT = True

try:
    with open(path, 'r') as f:
        RESERVED_USERNAMES = [line.rstrip() for line in f]
except EnvironmentError:
    RESERVED_USERNAMES = []

STATIC_DOC = '/static/docs/index.html'

try:
    HOSTNAME = socket.gethostname()
except Exception:
    HOSTNAME = 'localhost'

CACHE_MIXIN_SECONDS = 60

TAGGIT_CASE_INSENSITIVE = True

DEFAULT_CELERY_MAX_RETIRES = 3
DEFAULT_CELERY_INTERVAL_START = 2
DEFAULT_CELERY_INTERVAL_MAX = 0.5
DEFAULT_CELERY_INTERVAL_STEP = 0.5

# legacy setting for old sites who still use a local_settings.py file and have
# not updated to presets/
WSGI_APPLICATION = 'myhelpline.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'mydatabase',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
    }
}

DATABASE_ROUTERS = []  # turn off second database

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

LANGUAGES = (
    ('fr', u'Français'),
    ('en', u'English'),
    ('es', u'Español'),
    ('it', u'Italiano'),
    ('km', u'ភាសាខ្មែរ'),
    ('ne', u'नेपाली'),
    ('nl', u'Nederlands'),
    ('sw', u'Swahili'),
    ('zh-hans', u'简体中文'),
)

LOCALE_PATHS = (os.path.join(BASE_DIR, 'locale'), )

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# Enketo URL
ENKETO_PROTOCOL = 'https'
ENKETO_URL = 'https://enketo.helpline.co.ke'
ENKETO_API_SURVEY_PATH = '/api_v2/survey'
ENKETO_API_INSTANCE_PATH = '/api_v2/instance'
ENKETO_PREVIEW_URL = urljoin(ENKETO_URL, ENKETO_API_SURVEY_PATH + '/preview')
ENKETO_API_TOKEN = ''
ENKETO_API_INSTANCE_IFRAME_URL = ENKETO_URL + "api_v2/instance/iframe"
ENKETO_API_SALT = 'secretsalt'
VERIFY_SSL = True

MEDIA_ROOT = "/var/www/html/media/"
MEDIA_URL = "/media/"

AVATAR_CACHE_ENABLED = False

# Django bower settings requirements.
BOWER_COMPONENTS_ROOT = os.path.join(BASE_DIR, "components/")

BOWER_INSTALLED_APPS = [
    'admin-lte#2.3.7',
    'ionicons#2.0.1',
    'backbone#1.2.3',
    'backbone.paginator#2.0.8',
    'backgrid#0.3.8',
    'backgrid-filter#0.3.7',
    'backgrid-paginator#0.3.9',
    'blockui#2.70',
    'blueimp-md5#2.6.0',
    'bootbox.js#5.4.0',
    'bootstrap#3.3.7',
    'bootstrap-datepicker#1.6.4',
    'bootstrap-daterangepicker#2.1.25',
    'bootstrap3-wysihtml5-bower#0.3.3',
    'clipboard#1.5.15',
    'components-font-awesome#4.1.0',
    'd3#3.3.13',
    'datatables.net#1.10.21',
    'datatables.net-buttons#1.6.2',
    'dimple#1.1.3',
    'easytimer.js#2.2.3',
    'font-awesome#4.7.0',
    'handlebars#1.3.0',
    'howler.js#2.2.0',
    'jquery#2.2.3',
    'jquery-migrate#1.4.0',
    'jquery-pjax#2.0.1',
    'jquery-ui#1.10.4',
    'jszip#3.5.0',
    'jvectormap#1.2.2',
    'lunr.js#0.7.2',
    'moment#2.18.1',
    'nvd3#1.7.1',
    'pdfmake#0.1.65',
    'rangy-1.3#d2b26285b83a1d2f3cbd46196cb13896e3098a29',
    'spin.js#2.3.2',
    'toastr#2.1.3',
    'typeahead.js#0.11.1',
    'underscore#1.9.1',
    'webrtc-adapter#8.0.0',
    'wysihtml5x#0.4.13',
    'wavesurfer.js#6.2.0',
]

STATICFILES_FINDERS = ['djangobower.finders.BowerFinder',
                       'django.contrib.staticfiles.finders.FileSystemFinder',
                       'django.contrib.staticfiles.finders.AppDirectoriesFinder']

INTERNAL_IPS = '192.168.86.1'

SHORT_DATETIME_FORMAT = 'Y N j, H:i:s.u'
DATETIME_FORMAT = 'Y N j, H:i:s.u'
TIME_FORMAT = 'Y N j, H:i:s.u'

# Login URLs
LOGIN_URL = 'two_factor:login'
LOGIN_REDIRECT_URL = 'dashboard_home'

# Default service used to report filters
DEFAULT_SERVICE = 'Inbound'

# Default dispositions.
DISPOSITION_CHOICES = [
    ('--', '--'),
    ('Feedback', 'Feedback'),
    ('Request', 'Request'),
    ('Inquiry', 'Inquiry'),
    ('Agent', 'Agent'),
    ('Complaint', 'Complaint'),
    ('Transfer', 'Transfer'),
    ('Silent Call', 'Silent Call'),
    ('Dropped', 'Dropped'),
    ('Prank', 'Prank'),
]

# Default break reasons
BREAK_REASONS = [
    ('', '--'),
    ('Bio Break', 'Bio Break'),
    ('Tea Break', 'Tea Break'),
    ('System Issue TE', 'System Issue TE'),
    ('System Issue PC', 'System Issue PC'),
    ('Meeting', 'Meeting'),
    ('Lunch', 'Lunch'),
    ('End of Shift', 'End of Shift'),
    ('Consulting', 'Consulting'),
    ('Coaching', 'Coaching'),
]

BLACKBOX_API_KEY = ''
BLACKBOX_API_SIGNATURE = ''
BLACKBOX_SHORT_CODE = ''
BLACKBOX_KEYWORD = ''

AFRICASTALKING_API_KEY = ''
AFRICASTALKING_API_USERNAME = ''

SENDSMS_BACKEND = 'custom_sms_backend.custom.AfricasTalkingSmsBackend'

SITE_ID = 2

EMAIL_BACKEND = "mailer.backend.DbBackend"

# Email will be sent to Help Desk Emails on Escalation.
HELPDESK_EMAILS = []


ADMIN_TOOLS_MENU = 'custom_admin_tools.menu.CustomMenu'
ADMIN_TOOLS_INDEX_DASHBOARD = 'custom_admin_tools.dashboard.CustomIndexDashboard'

ADMIN_TOOLS_THEMING_CSS = 'helpline/css/theming.css'

CORS_ORIGIN_WHITELIST = (
    'http://localhost:5000',
    'http://127.0.0.1:5000'
)

SALESFORCE_URL = ''
SALESFORCE_ORGID = ''

SALESFORCE_LEAD_URL = ""
SALESFORCE_LEAD_ORGID = ""

HELPLINE_SPOOL_DIR = ''

TESTING_MODE = True

REPLICA_DATABASES = []

RECAPTCHA_PRIVATE_KEY = 'your private key'
RECAPTCHA_PUBLIC_KEY = 'your public key'
RECAPTCHA_DEFAULT_ACTION = 'generic'
RECAPTCHA_SCORE_THRESHOLD = 0.5
# If you require reCaptcha to be loaded from somewhere other than https://google.com
# (e.g. to bypass firewall restrictions), you can specify what proxy to use.
# RECAPTCHA_FRONTEND_PROXY_HOST = 'https://recaptcha.net'

ODK_TOKEN_FERNET_KEY = ''

DEFAULT_SIP_ACCOUNT = {}

SESSION_ENGINE = 'user_sessions.backends.db'

LOGOUT_REDIRECT_URL = 'logout'

# A string specifying the directory where the GeoIP data files are located.
# GEOIP_PATH = ""

# The basename to use for the GeoIP country data file
# Defaults to 'GeoLite2-Country.mmdb'.
# GEOIP_COUNTRY = ""

# The basename to use for the GeoIP city data file.
# Defaults to 'GeoLite2-City.mmdb'.
# GEOIP_CITY = ""

ACCOUNT_TIMEZONES = list(zip(pytz.all_timezones, pytz.all_timezones))

ACCOUNT_LANGUAGES = [
    ("en", "English"),
    ("en-au", "Australian English"),
    ("en-gb", "British English"),
]

ACCOUNT_EMAIL_UNIQUE = True

PINAX_INVITATIONS_DEFAULT_INVITE_ALLOCATION = 10

ACCOUNT_PASSWORD_STRIP = True

ACCOUNT_CREATE_ON_SAVE = True

ORGS_SLUGFIELD = 'django_extensions.db.fields.AutoSlugField'


# IMAB Integration credentials
IMAB_CLIENTID = ''
IMAB_CLIENTSECRET = ""

REST_KNOX = {
    'SECURE_HASH_ALGORITHM': 'cryptography.hazmat.primitives.hashes.SHA512',
    'AUTH_TOKEN_CHARACTER_LENGTH': 64, # By default, it is set to 64 characters (this shouldn't need changing).
    'TOKEN_TTL': timedelta(minutes=45), # The default is 10 hours i.e., timedelta(hours=10)).
    'USER_SERIALIZER': 'knox.serializers.UserSerializer',
    'TOKEN_LIMIT_PER_USER': None, # By default, this option is disabled and set to None -- thus no limit.
    'AUTO_REFRESH': False, # This defines if the token expiry time is extended by TOKEN_TTL each time the token is used.
    'EXPIRY_DATETIME_FORMAT': api_settings.DATETIME_FORMAT,
}

try:
    from myhelpline.localsettings import *
except ImportError as e:
    print(e)
    pass
